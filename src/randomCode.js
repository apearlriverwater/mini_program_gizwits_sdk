"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const MD5 = require("./md5");
const aesjs = require("./aes");
const getRandomCodes = ({ SSID, password, pks }) => {
    const randomCodes = [];
    pks.map(item => {
        const code = getRandomCode({
            SSID,
            password,
            pk: item
        });
        randomCodes.push(code);
    });
    return randomCodes;
};
const pcks7padding = (key) => {
    return key;
};
const getRandomCode = ({ SSID, password, pk }) => {
    const md5str = MD5.hex(SSID + password);
    let key = [];
    for (let i = 0; i < md5str.length; i = i + 2) {
        key.push(parseInt(md5str[i] + md5str[i + 1], 16));
    }
    key = pcks7padding(key);
    const text = pk;
    const textBytes = aesjs.utils.utf8.toBytes(text);
    const aesEcb = new aesjs.ModeOfOperation.ecb(key);
    const encryptedBytes = aesEcb.encrypt(textBytes);
    const md5Str = MD5.hex(encryptedBytes);
    return md5Str;
};
console.log(getRandomCodes({ SSID: 'gizwits', password: 'giz$2025', pks: ['162866a5336c4a92a7edba1a2b07b182'] }));
exports.default = getRandomCodes;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZG9tQ29kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInJhbmRvbUNvZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSw2QkFBOEI7QUFDOUIsK0JBQWdDO0FBZWhDLE1BQU0sY0FBYyxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBbUIsRUFBWSxFQUFFO0lBQzVFLE1BQU0sV0FBVyxHQUFhLEVBQUUsQ0FBQztJQUNqQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2IsTUFBTSxJQUFJLEdBQUcsYUFBYSxDQUFDO1lBQ3pCLElBQUk7WUFDSixRQUFRO1lBQ1IsRUFBRSxFQUFFLElBQUk7U0FDVCxDQUFDLENBQUM7UUFDSCxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLENBQUMsQ0FBQyxDQUFBO0lBQ0YsT0FBTyxXQUFXLENBQUM7QUFDckIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxZQUFZLEdBQUcsQ0FBQyxHQUFHLEVBQUUsRUFBRTtJQUMzQixPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMsQ0FBQTtBQUVELE1BQU0sYUFBYSxHQUFHLENBQUMsRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBa0IsRUFBVSxFQUFFO0lBQ3ZFLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQ3hDLElBQUksR0FBRyxHQUFhLEVBQUUsQ0FBQztJQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRTtRQUM1QyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ25EO0lBQ0QsR0FBRyxHQUFHLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN4QixNQUFNLElBQUksR0FBRyxFQUFFLENBQUM7SUFDaEIsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pELE1BQU0sTUFBTSxHQUFHLElBQUksS0FBSyxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbEQsTUFBTSxjQUFjLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNqRCxNQUFNLE1BQU0sR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3ZDLE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUMsQ0FBQTtBQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLGtDQUFrQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFHbEgsa0JBQWUsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgTUQ1ID0gcmVxdWlyZSgnLi9tZDUnKTtcbmltcG9ydCBhZXNqcyA9IHJlcXVpcmUoJy4vYWVzJyk7XG5cblxuaW50ZXJmYWNlIElHZXRSYW5kb21Db2RlcyB7XG4gIFNTSUQ6IHN0cmluZztcbiAgcGFzc3dvcmQ6IHN0cmluZztcbiAgcGtzOiBzdHJpbmdbXTtcbn1cblxuaW50ZXJmYWNlIElHZXRSYW5kb21Db2RlIHtcbiAgU1NJRDogc3RyaW5nO1xuICBwYXNzd29yZDogc3RyaW5nO1xuICBwazogc3RyaW5nO1xufVxuXG5jb25zdCBnZXRSYW5kb21Db2RlcyA9ICh7IFNTSUQsIHBhc3N3b3JkLCBwa3MgfTogSUdldFJhbmRvbUNvZGVzKTogc3RyaW5nW10gPT4ge1xuICBjb25zdCByYW5kb21Db2Rlczogc3RyaW5nW10gPSBbXTtcbiAgcGtzLm1hcChpdGVtID0+IHtcbiAgICBjb25zdCBjb2RlID0gZ2V0UmFuZG9tQ29kZSh7XG4gICAgICBTU0lELFxuICAgICAgcGFzc3dvcmQsXG4gICAgICBwazogaXRlbVxuICAgIH0pO1xuICAgIHJhbmRvbUNvZGVzLnB1c2goY29kZSk7XG4gIH0pXG4gIHJldHVybiByYW5kb21Db2Rlcztcbn1cblxuY29uc3QgcGNrczdwYWRkaW5nID0gKGtleSkgPT4ge1xuICByZXR1cm4ga2V5O1xufVxuXG5jb25zdCBnZXRSYW5kb21Db2RlID0gKHsgU1NJRCwgcGFzc3dvcmQsIHBrIH06IElHZXRSYW5kb21Db2RlKTogc3RyaW5nID0+IHtcbiAgY29uc3QgbWQ1c3RyID0gTUQ1LmhleChTU0lEICsgcGFzc3dvcmQpO1xuICBsZXQga2V5OiBudW1iZXJbXSA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG1kNXN0ci5sZW5ndGg7IGkgPSBpICsgMikge1xuICAgIGtleS5wdXNoKHBhcnNlSW50KG1kNXN0cltpXSArIG1kNXN0cltpICsgMV0sIDE2KSk7XG4gIH1cbiAga2V5ID0gcGNrczdwYWRkaW5nKGtleSk7XG4gIGNvbnN0IHRleHQgPSBwaztcbiAgY29uc3QgdGV4dEJ5dGVzID0gYWVzanMudXRpbHMudXRmOC50b0J5dGVzKHRleHQpO1xuICBjb25zdCBhZXNFY2IgPSBuZXcgYWVzanMuTW9kZU9mT3BlcmF0aW9uLmVjYihrZXkpO1xuICBjb25zdCBlbmNyeXB0ZWRCeXRlcyA9IGFlc0VjYi5lbmNyeXB0KHRleHRCeXRlcyk7XG4gIGNvbnN0IG1kNVN0ciA9IE1ENS5oZXgoZW5jcnlwdGVkQnl0ZXMpO1xuICByZXR1cm4gbWQ1U3RyO1xufVxuXG5jb25zb2xlLmxvZyhnZXRSYW5kb21Db2Rlcyh7IFNTSUQ6ICdnaXp3aXRzJywgcGFzc3dvcmQ6ICdnaXokMjAyNScsIHBrczogWycxNjI4NjZhNTMzNmM0YTkyYTdlZGJhMWEyYjA3YjE4MiddIH0pKTtcblxuXG5leHBvcnQgZGVmYXVsdCBnZXRSYW5kb21Db2RlczsiXX0=